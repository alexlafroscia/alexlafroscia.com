name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      # Check out code
      - uses: actions/checkout@v3

      # Set up Node and global `yarn` executable through Volta
      - uses: volta-cli/action@v1

      # Set up Yarn cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Install dependencies
      - run: yarn

      # Do the work
      - run: yarn build
      - run: yarn check

  format:
    runs-on: ubuntu-latest
    steps:
      # Check out code
      - uses: actions/checkout@v3

      # Set up Node and global `yarn` executable through Volta
      - uses: volta-cli/action@v1

      # Set up Yarn cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Install dependencies
      - run: yarn

      # Do the work
      - run: yarn format --check

  test:
    runs-on: ubuntu-latest
    steps:
      # Check out code
      - uses: actions/checkout@v3

      # Set up Node and global `yarn` executable through Volta
      - uses: volta-cli/action@v1

      # Set up Yarn cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Install dependencies
      - run: yarn

      # Do the work
      - run: yarn build
      - run: yarn test
